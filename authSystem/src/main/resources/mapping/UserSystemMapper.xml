<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zht.dao.UserSystemMapper" >
  <resultMap id="BaseResultMap" type="com.zht.bean.UserSystem" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="createTime" property="createTime" jdbcType="TIMESTAMP" />
    <result column="userId" property="userId" jdbcType="INTEGER" />
    <result column="sysUuid" property="sysUuid" jdbcType="VARCHAR" />
    <result column="audit" property="audit" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, createTime, userId, sysUuid, audit
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user_system
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user_system
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zht.bean.UserSystem" >
    insert into user_system (id, createTime, userId, sysUuid, audit)
    values (#{id,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{userId,jdbcType=INTEGER}, 
      #{sysUuid,jdbcType=VARCHAR}, #{audit,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.zht.bean.UserSystem" >
    insert into user_system
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="createTime != null" >
        createTime,
      </if>
      <if test="userId != null" >
        userId,
      </if>
      <if test="sysUuid != null" >
        sysUuid,
      </if>
      <if test="audit != null" >
        audit,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="sysUuid != null" >
        #{sysUuid,jdbcType=VARCHAR},
      </if>
      <if test="audit != null" >
        #{audit,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zht.bean.UserSystem" >
    update user_system
    <set >
      <if test="createTime != null" >
        createTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null" >
        userId = #{userId,jdbcType=INTEGER},
      </if>
      <if test="sysUuid != null" >
        sysUuid = #{sysUuid,jdbcType=VARCHAR},
      </if>
      <if test="audit != null" >
        audit = #{audit,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zht.bean.UserSystem" >
    update user_system
    set createTime = #{createTime,jdbcType=TIMESTAMP},
      userId = #{userId,jdbcType=INTEGER},
      sysUuid = #{sysUuid,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="getUserSystemByUserIdAndSysId" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user_system
    where  userId = #{userId} and sysUuid = #{sysUuid}
  </select>

  <select id="getUserRolePermissionByIdAndSysUuid" resultType="Permission">
    SELECT DISTINCT f.* FROM userinfo a
    JOIN user_system b on b.userId = a.id
    LEFT JOIN userinfo_role c ON c.userId = a.id
    JOIN role d on d.id = c.roleid
    JOIN role_permission e on e.roleId = d.id
    JOIN permission f on f.id = e.perId
    WHERE a.id=#{userId} and f.sysUuid=#{sysUuid}
    ORDER BY f.id
  </select>

  <select id="flageUserHasSystem" resultType="UserSystem" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from user_system
    where userId = #{userId} and sysUuid='c9a273cc-9263-4835-b0f4-7c7725b921b3'
  </select>

  <select id="countAgUserSystem" resultType="int">
    SELECT count(*) FROM `user_system` WHERE userId = #{userId}
  </select>

  <select id="pageAgUserSystem" resultType="SystemReg">
    SELECT b.*, c.userName, d.sysTypeName, a.id userSystemId, a.audit FROM user_system a
    LEFT JOIN systemreg b ON b.sysUuid = a.sysUuid
    LEFT JOIN userinfo c on c.id = b.userId
    left JOIN systype d on d.id = b.sysTypeId
    WHERE a.userId = #{layuiTable.id} LIMIT #{layuiTable.index} , #{layuiTable.limit}
  </select>

  <select id="selectUserSysBySysUuidAndUserId" resultType="UserSystem">
    select
    <include refid="Base_Column_List" />
    from user_system
    where userId = #{userId} and sysUuid = #{sysUuid}
  </select>

  <select id="countListUserSystemAudit" resultType="int">
    select count(*)
    from user_system
    where sysUuid = #{sysUuid} and audit = 0
  </select>

  <select id="listUserSystemAudit" resultType="SystemReg">
   select c.* , b.userName, a.id userSystemId, a.audit from user_system a
    LEFT JOIN userinfo b ON b.id = a.userId
    LEFT JOIN systemreg c on c.sysUuid = a.sysUuid
    where a.sysUuid = #{sysUuid} AND (a.audit = 0 or a.audit = 2)
    order by a.audit
    LIMIT #{layuiTable.index} , #{layuiTable.limit}
  </select>



</mapper>